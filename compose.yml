version: '3.7'

services:
  midjourney-redis:
    image: redis:alpine
    container_name: midjourney-redis
    hostname: midjourney-redis
    ports:
      - '6379:6379'
    expose:
      - '6379'
    networks:
      - default
  midjourney-authorization:
    build: 
      context: ./midjourney-authorization
      dockerfile: Dockerfile
    container_name: midjourney-authorization
    restart: "no"
    volumes:
      - ./logs/midjourney-authorization:/home/midjourney-authorization/logs
      - ./midjourney-authorization:/app
    working_dir: /app
    entrypoint: ["python3", "main.py"]
    environment:
      - MJ_DISCORD_USER_TOKEN
  midjourney-proxy:
    depends_on:
      - midjourney-authorization
    build: 
      context: .
      dockerfile: Dockerfile
    volumes:
      # - ./myconfig:/home/spring/config
      - ./logs/midjourney-proxy:/home/spring/logs
    ports:
      - 8080:8080
      - 9876:9876
    environment:
      - JAVA_OPTS=-XX:MaxRAMPercentage=85 -Djava.awt.headless=true -XX:+HeapDumpOnOutOfMemoryError -XX:MaxGCPauseMillis=20 -XX:InitiatingHeapOccupancyPercent=35 -Xlog:gc:file=/home/spring/logs/gc.log -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=9876 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Dlogging.file.path=/home/spring/logs -Dserver.port=8080 -Duser.timezone=Asia/Shanghai
      - mj.discord.guild-id=${MJ_DISCORD_GUILD_ID}
      - mj.discord.channel-id=${MJ_DISCORD_CHANNEL_ID}
      - mj.discord.user-token=${MJ_DISCORD_USER_TOKEN}
    networks:
      - default